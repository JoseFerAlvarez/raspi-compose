version: "3"

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - '${PORTAINER_LOCALTIME}:/etc/localtime:ro'
      - '${PORTAINER_SOCKET}:/var/run/docker.sock:ro;'
      - '${PORTAINER_ROUTE}:/data'
    ports:
      - 9000:9000

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    environment:
      TZ: '${TIMEZONE}'
      WEBPASSWORD: '${PIHOLE_PASS}'
    volumes:
      - '${PIHOLE_ROUTE}/etc-pihole:/etc/pihole'
      - '${PIHOLE_ROUTE}/etc-dnsmasq:/etc/dnsmasq.d'

  calibre-web:
    image: linuxserver/calibre-web:arm64v8-latest
    container_name: calibre
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - DOCKER_MODS=linuxserver/mods:universal-calibre
    volumes:
      - ${CALIBRE_ROUTE}/data:/config
      - ${CALIBRE_STORAGE}/books:/books
    ports:
      - 8083:8083

  plex:
    image: linuxserver/plex:arm64v8-latest
    container_name: plex
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    expose:
      - 32400
      - 33400
    ports:
      - 32400:32400
      - 33400:33400
    environment:
      - TZ=${TIMEZONE}
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${PLEX_ROUTE}/data:/config
      - ${PLEX_STORAGE}/series:/tv
      - ${PLEX_STORAGE}/pelis:/movies
      - ${PLEX_STORAGE}/courses:/courses

  transmission:
    image: linuxserver/transmission:arm64v8-latest
    container_name: transmission
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - TRANSMISSION_WEB_HOME= #optional
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
      - WHITELIST= #optional
      - PEERPORT= #optional
      - HOST_WHITELIST= #optional
    volumes:
      - ${TRANSMISSION_ROUTE}/data:/config
      - ${TRANSMISSION_STORAGE}/downloads:/downloads
      - ${TRANSMISSION_ROUTE}/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp

  flexget:
    image: linuxserver/flexget:arm64v8-latest
    container_name: flexget
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - ${FLEXGET_ROUTE}:/config
      - ${FLEXGET_ROUTE}/custom-cont-init.d:/custom-cont-init.d
      - ${TRANSMISSION_STORAGE}/downloads:/downloads
      - ${PLEX_STORAGE}:/storage
    ports:
      - 5050:5050
    environment:
      - PUID=1001
      - PGID=1001
      - TORRENT_PLUGIN=transmission
      - FG_WEBUI_PASSWD=${FLEXGET_PASS}

  watchtower:
    image: containrrr/watchtower:arm64v8-latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      WATCHTOWER_SCHEDULE: "0 0 1 * * *"
      WATCHTOWER_CLEANUP: "true"
      TZ: ${TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
